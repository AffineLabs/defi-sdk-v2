/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  DelegatorFactory,
  DelegatorFactoryInterface,
} from "../DelegatorFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
    ],
    name: "createDelegator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class DelegatorFactory__factory {
  static readonly abi = _abi;

  static createInterface(): DelegatorFactoryInterface {
    return new utils.Interface(_abi) as DelegatorFactoryInterface;
  }

  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): DelegatorFactory {
    return new Contract(address, _abi, signerOrProvider) as DelegatorFactory;
  }
}
