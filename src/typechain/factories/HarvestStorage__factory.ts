/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  HarvestStorage,
  HarvestStorageInterface,
} from "../HarvestStorage";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PerformanceFeeWithdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "accumulatedPerformanceFee",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "performanceFeeBps",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "_newFeeBps",
        type: "uint128",
      },
    ],
    name: "setPerformanceFeeBps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class HarvestStorage__factory {
  static readonly abi = _abi;

  static createInterface(): HarvestStorageInterface {
    return new utils.Interface(_abi) as HarvestStorageInterface;
  }

  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): HarvestStorage {
    return new Contract(address, _abi, signerOrProvider) as HarvestStorage;
  }
}
